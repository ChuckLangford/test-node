# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
# Enhancements:
# - Make the image version a variable
# - Make the droplet name a variable
# - Make the port mapping a variable
# - Make the package url a variable
# - Split testing workflows from image creation workflow and release workflow

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    - name: login
      run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Build the Docker image
      run: docker build -t docker.pkg.github.com/chucklangford/test-node/test-node-chuck:1.0.0 .
    - name: Publish the Docker image
      run: docker push docker.pkg.github.com/chucklangford/test-node/test-node-chuck:1.0.0
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    - name: Sign in Docker on Digital Ocean droplet
      run: doctl compute ssh docker-new --ssh-command "docker login -u ${GITHUB_ACTOR} -p ${{secrets.GITHUB_TOKEN}} docker.pkg.github.com"
    - name: Pull Docker Image on Digital Ocean droplet
      run: doctl compute ssh docker-new --ssh-command "docker pull docker.pkg.github.com/chucklangford/test-node/test-node-chuck:1.0.0"
    - name: Run The Image on Droplet
      run: doctl compute ssh docker-new --ssh-command "docker run -d -p 3000:3000 --name node-test docker.pkg.github.com/chucklangford/test-node/test-node-chuck:1.0.0"
